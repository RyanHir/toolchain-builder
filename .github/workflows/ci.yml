name: Build

on:
  push:
    paths-ignore:
      - '.vscode'
      - '**.md'
  pull_request:
    paths-ignore:
      - '.vscode'
      - '**.md'

jobs:
  build:
    strategy:
      matrix:
        target:
          [
            { os: roborio-stable, port: cortexa9_vfpv3 },
            { os: roborio-staging, port: cortexa9_vfpv3 },
            { os: bionic, port: amd64 },
            { os: bionic, port: armhf },
            { os: bionic, port: arm64 },
            { os: focal, port: amd64 },
            { os: focal, port: armhf },
            { os: focal, port: arm64 },
            { os: buster, port: amd64 },
            { os: buster, port: armhf },
            { os: buster, port: arm64 },
            { os: bullseye, port: amd64 },
            { os: bullseye, port: armhf },
            { os: bullseye, port: arm64 },
            { os: raspi-buster, port: armhf },
            { os: raspi-bullseye, port: armhf },
          ]
        host:
          [
            {
              os-cfg: linux_arm64,
              runner: ubuntu-latest,
              container: "ghcr.io/ryanhir/toolchain-builder:xenial",
            },
            {
              os-cfg: linux_armhf,
              runner: ubuntu-latest,
              container: "ghcr.io/ryanhir/toolchain-builder:xenial",
            },
            {
              os-cfg: linux_x86_64,
              runner: ubuntu-latest,
              container: "ghcr.io/ryanhir/toolchain-builder:xenial",
            },
            {
              os-cfg: windows_i686,
              runner: ubuntu-latest,
              container: "ghcr.io/ryanhir/toolchain-builder:bionic",
            },
            {
              os-cfg: windows_x86_64,
              runner: ubuntu-latest,
              container: "ghcr.io/ryanhir/toolchain-builder:bionic",
            },
            {
              os-cfg: macos_arm64,
              runner: macos-latest,
              container: "",
            },
            {
              os-cfg: macos_x86_64,
              runner: macos-latest,
              container: "",
            }
          ]
    name: Build ${{ matrix.target.os }}-${{ matrix.target.port }} for ${{ matrix.host.os-cfg }}
    runs-on: ${{ matrix.host.runner }}
    container: ${{ matrix.host.container }}
    steps:
      - uses: actions/checkout@v1
      - name: Prep MacOS
        if: matrix.host.runner == 'macos-latest'
        run: brew install coreutils dpkg gnu-tar gzip rsync xz
      - name: Import Developer ID Certificate
        uses: wpilibsuite/import-signing-certificate@v1
        with:
          certificate-data: ${{ secrets.APPLE_CERTIFICATE_DATA }}
          certificate-passphrase: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
          keychain-password: ${{ secrets.APPLE_KEYCHAIN_PASSWORD }}
        if: github.repository_owner == 'wpilibsuite' && matrix.host.runner == 'macos-latest'
      - name: Build
        run: |
          ./build.sh hosts/${{matrix.host.os-cfg}}.env targets/${{matrix.target.os}} ${{matrix.target.port}}
        env:
          APPLE_DEVELOPER_ID: ${{ secrets.APPLE_DEVELOPER_ID }}
      - name: Test
        if:
          matrix.host.os-cfg == 'macos_x86_64' ||
          matrix.host.os-cfg == 'linux_x86_64'
        run:
          ./test.sh hosts/${{matrix.host.os-cfg}}.env targets/${{matrix.target.os}} ${{matrix.target.port}}
      - uses: actions/upload-artifact@v2
        with:
          name: ${{matrix.target.os}}-${{matrix.target.port}}-${{matrix.host.os-cfg}}
          path: output/*
  lipo-merge:
    matrix:
      [
        { os: roborio-stable, port: cortexa9_vfpv3 },
        { os: roborio-staging, port: cortexa9_vfpv3 },
        { os: bionic, port: amd64 },
        { os: bionic, port: armhf },
        { os: bionic, port: arm64 },
        { os: focal, port: amd64 },
        { os: focal, port: armhf },
        { os: focal, port: arm64 },
        { os: buster, port: amd64 },
        { os: buster, port: armhf },
        { os: buster, port: arm64 },
        { os: bullseye, port: amd64 },
        { os: bullseye, port: armhf },
        { os: bullseye, port: arm64 },
        { os: raspi-buster, port: armhf },
        { os: raspi-bullseye, port: armhf },
      ]
    name: Create Universal Binary for ${{matrix.os}}_${{matrix.port}}
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v1
      - name: Setup
        run: brew install coreutils dpkg gnu-tar gzip rsync xz
      - uses: actions/download-artifact@v2
        with:
          name: ${{matrix.os}}-${{matrix.port}}-macos_arm64
      - uses: actions/download-artifact@v2
        with:
          name: ${{matrix.os}}-${{matrix.port}}-macos_x86_64
      - name: Import Developer ID Certificate
        uses: wpilibsuite/import-signing-certificate@v1
        with:
          certificate-data: ${{ secrets.APPLE_CERTIFICATE_DATA }}
          certificate-passphrase: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
          keychain-password: ${{ secrets.APPLE_KEYCHAIN_PASSWORD }}
        if: github.repository_owner == 'wpilibsuite'
      - name: Merge Toolchains
        run: ./lipo-merge.sh targets/${{matrix.os}} ${{matrix.port}}
      - uses: actions/upload-artifact@v2
        with:
          name: ${{matrix.os}}-${{matrix.port}}-macos_universal
          path: output/*