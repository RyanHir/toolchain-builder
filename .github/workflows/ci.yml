name: Build

on:
  push:
    paths-ignore:
      - ".vscode"
      - "**.md"
  pull_request:
    paths-ignore:
      - ".vscode"
      - "**.md"

jobs:
  targets:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v1
      - id: set-matrix
        run: |
          # Load targets into runtime variable to reduce complexity
          JSON="$(cat .github/workflows/targets.json)"
          # Remove newlines
          JSON="${JSON//'%'/'%25'}"
          JSON="${JSON//$'\n'/'%0A'}"
          JSON="${JSON//$'\r'/'%0D'}"
          echo "::set-output name=matrix::${JSON}"
  build-sysroot:
    needs: targets
    strategy:
      matrix:
        target: ${{fromJson(needs.targets.outputs.matrix).tasks}}
    name: Build sysroot for ${{ matrix.target.os }}-${{ matrix.target.port }}
    runs-on: ubuntu-latest
    container: "docker.io/wpilib/opensdk-ubuntu:20.04"
    env:
      WPI_TARGET: ${{matrix.target.os}}
      WPI_TARGET_PORT: ${{matrix.target.port}}
      WPI_USE_THREADS: 8
    steps:
      - uses: actions/checkout@v1
      - name: Install opensysroot
        run: |
          cd res/opensysroot
          python3 -m pip install .
      - name: Build sysroot
        run: |
          make backend
      - uses: actions/upload-artifact@v2
        with:
          name: ${{matrix.target.os}}-${{matrix.target.port}}-sysroot
          path: output/*
  build-platform-utils:
    needs: [targets, build-sysroot]
    strategy:
      matrix:
        target: ${{fromJson(needs.targets.outputs.matrix).tasks}}
        host:
          [
            {
              os-cfg: linux_x86_64,
              runner: ubuntu-latest,
              container: "docker.io/wpilib/opensdk-ubuntu:20.04",
              testable: true,
            },
            {
              os-cfg: windows_x86_64,
              runner: ubuntu-latest,
              container: "docker.io/wpilib/opensdk-ubuntu:20.04",
              testable: false,
            },
            {
              os-cfg: macos_x86_64,
              runner: macos-latest,
              container: "",
              testable: true,
            },
            {
              os-cfg: macos_arm64,
              runner: macos-latest,
              container: "",
              testable: false,
            },
          ]
        include:
          - host:
              os-cfg: linux_i686
              runner: ubuntu-latest
              container: "docker.io/wpilib/opensdk-ubuntu:20.04"
              testable: false
            target:
              os: raspi-bullseye
              port: armhf
    name: Build ${{ matrix.target.os }}-${{ matrix.target.port }} for ${{ matrix.host.os-cfg }}
    runs-on: ${{ matrix.host.runner }}
    container: ${{ matrix.host.container }}
    env:
      WPI_HOST: ${{matrix.host.os-cfg}}
      WPI_TARGET: ${{matrix.target.os}}
      WPI_TARGET_PORT: ${{matrix.target.port}}
      WPI_USE_THREADS: 8
    steps:
      - uses: actions/checkout@v1
      - name: Prep MacOS
        if: contains(matrix.host.runner, 'macos')
        run: brew install rsync xz gmp mpfr libmpc isl
      - uses: actions/download-artifact@v2
        with:
          name: ${{matrix.target.os}}-${{matrix.target.port}}-sysroot
          path: output/
      - name: Build
        run: |
          make frontend
          rm output/*.tar
      - name: Test
        if: matrix.host.testable
        run: make test
      - name: Import Apple Developer ID Certificate
        if: contains(matrix.host.os-cfg, 'macos') &&
          github.repository_owner == 'wpilibsuite' &&
          startsWith(github.ref, 'refs/tags/v')
        uses: wpilibsuite/import-signing-certificate@v1
        with:
          certificate-data: ${{ secrets.APPLE_CERTIFICATE_DATA }}
          certificate-passphrase: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
          keychain-password: ${{ secrets.APPLE_KEYCHAIN_PASSWORD }}
      - name: Sign toolchain with Apple Developer ID Certificate
        if: contains(matrix.host.os-cfg, 'macos') &&
          github.repository_owner == 'wpilibsuite' &&
          startsWith(github.ref, 'refs/tags/v')
        env:
          APPLE_DEVELOPER_ID: ${{ secrets.APPLE_DEVELOPER_ID }}
        run: make sign
      - uses: actions/upload-artifact@v2
        with:
          name: ${{matrix.target.os}}-${{matrix.target.port}}-${{matrix.host.os-cfg}}
          path: output/*
