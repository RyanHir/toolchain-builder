name: Build

on:
  push:
    paths-ignore:
      - ".vscode"
      - "**.md"
  pull_request:
    paths-ignore:
      - ".vscode"
      - "**.md"

jobs:
{% for target in targets %}
  build-sysroot-{{ target.os }}-{{ target.port }}:
    name: Build sysroot for {{ target.os }}-{{ target.port }}
    runs-on: ubuntu-latest
    container: "docker.io/wpilib/opensdk-ubuntu:22.04"
    env:
      WPI_TARGET: {{ target.os }}
      WPI_TARGET_PORT: {{ target.port }}
      WPI_USE_THREADS: 8
    steps:
      - uses: actions/checkout@v3
      - name: Install opensysroot
        run: |
          cd res/opensysroot
          python3 -m pip install .
      - name: Build sysroot
        run: |
          make backend
      - uses: actions/upload-artifact@v3
        with:
          name: {{ target.os }}-{{ target.port }}-sysroot
          path: output/*
  build-platform-utils-{{ target.os }}-{{ target.port }}:
    needs: build-sysroot-{{ target.os }}-{{ target.port }}
    strategy:
      matrix:
        host:
          [
            {
              os-cfg: linux_x86_64,
              runner: ubuntu-latest,
              container: "docker.io/wpilib/opensdk-ubuntu:22.04",
              testable: true,
            },
            {
              os-cfg: windows_x86_64,
              runner: ubuntu-latest,
              container: "docker.io/wpilib/opensdk-ubuntu:22.04",
              testable: false,
            },
            {
              os-cfg: macos_x86_64,
              runner: macos-latest,
              container: "",
              testable: true,
            },
            {
              os-cfg: macos_arm64,
              runner: macos-latest,
              container: "",
              testable: false,
            },
{%- if "roborio" in target.os %}
            {
              os-cfg: linux_arm64,
              runner: ubuntu-latest,
              container: "docker.io/wpilib/opensdk-ubuntu:22.04",
              testable: false,
            },
{%- endif %}
{%- if "roborio" in target.os %}
            {
              os-cfg: linux_armhf,
              runner: ubuntu-latest,
              container: "docker.io/wpilib/opensdk-ubuntu:22.04",
              testable: false,
            },
{%- endif %}
{%- if target.os == "raspi-bullseye" %}
            {
              os-cfg: linux_i686,
              runner: ubuntu-latest,
              container: "docker.io/wpilib/opensdk-ubuntu:22.04",
              testable: false,
            },
{%- endif %}
          ]
    name: Build {{ target.os }}-{{ target.port }} for ${{ '{{' }} matrix.host.os-cfg }}
    runs-on: ${{ '{{' }} matrix.host.runner }}
    container: ${{ '{{' }} matrix.host.container }}
    env:
      WPI_HOST: ${{ '{{' }}matrix.host.os-cfg}}
      WPI_TARGET: {{ target.os }}
      WPI_TARGET_PORT: {{ target.port }}
      WPI_USE_THREADS: 8
    steps:
      - uses: actions/checkout@v3
      - name: Prep MacOS
        if: contains(matrix.host.runner, 'macos')
        run: brew install rsync xz gmp mpfr libmpc isl
      - uses: actions/download-artifact@v3
        with:
          name: {{ target.os }}-{{ target.port }}-sysroot
          path: output/
      - name: Build
        run: |
          make frontend
          rm output/*.tar
      - name: Test
        if: matrix.host.testable
        run: make test
      - uses: actions/upload-artifact@v3
        with:
          name: {{ target.os }}-{{ target.port }}-${{ '{{' }}matrix.host.os-cfg}}
          path: output/*
{% endfor %}
  release:
    needs: [{% for target in targets %}build-platform-utils-{{ target.os }}-{{ target.port }}{% if not loop.last %}, {% endif %}{% endfor %}]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v3
      - name: Remove sysroots
        run: find -name "*.tar" -delete
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: "**/*"
        env:
          GITHUB_TOKEN: ${{ '{{' }} secrets.GITHUB_TOKEN }}
